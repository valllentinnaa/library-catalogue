# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build Test Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    # strategy:
    #   matrix:
    #     node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout repository code    
      uses: actions/checkout@v3
    - name: Use Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        cache: 'npm'
    - name: Install dependencies
      run: npm install
    - name: Start backend
      run: npm run start-be &
    - name: Wait for backend to start
      run: sleep 5
    - name: Start frontend
      run: npm run start-fe &
    - name: Wait for frontend to start
      run: sleep 5
    - name: Install playwright browsers
      run: npx playwright install
    - name: Run Playwright tests    
      run: npm run test-ui

  deploy-be:
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/main'
      needs: build_and_test
      steps:
      - name: Deploy backend to production    
        uses: johnbeynon/render-deploy-action@0.0.8
        with:
            service-id: ${{ secrets.RENDER_SERVICE_BE_ID }}
            api-key: ${{ secrets.RENDER_API_KEY }}
            wait-for-success: true

  deploy-fe:
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/main'
      needs: deploy-be
      steps:
      - name: Deploy fronend to production    
        uses: johnbeynon/render-deploy-action@0.0.8
        with:
            service-id: ${{ secrets.RENDER_SERVICE_FE_ID }}
            api-key: ${{ secrets.RENDER_API_KEY }}
            wait-for-success: true
